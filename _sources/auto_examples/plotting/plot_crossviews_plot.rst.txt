.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plotting_plot_crossviews_plot.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plotting_plot_crossviews_plot.py:


==============================================
Plotting Multiview Data with a Cross-view Plot
==============================================

In many cases with multi-view data, especially after use of an embedding
algorithm, one is interested in visualizing two views across dimensions.
One use is assessing correlation between corresponding dimensions of views.
Here, we use this function to display the relationship between two views
simulated from transformations of multi-variant gaussians.



.. image:: /auto_examples/plotting/images/sphx_glr_plot_crossviews_plot_001.png
    :alt: View 1 vs. View 2 (Polynomial                     Transform + noise)
    :class: sphx-glr-single-img






.. code-block:: default


    # License: MIT

    from mvlearn.datasets import make_gaussian_mixture
    from mvlearn.plotting import crossviews_plot
    import numpy as np


    n_samples = 100
    centers = [[0, 1], [0, -1]]
    covariances = [np.eye(2), np.eye(2)]
    Xs, y = make_gaussian_mixture(
        n_samples, centers, covariances, transform='poly', noise_dims=2)

    # Below, we see that the first two dimensions are related by a degree 2
    # polynomial while the latter two dimensions are uncorrelated.


    crossviews_plot(Xs, labels=y,
                    title='View 1 vs. View 2 (Polynomial \
                        Transform + noise)', equal_axes=True)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.022 seconds)


.. _sphx_glr_download_auto_examples_plotting_plot_crossviews_plot.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_crossviews_plot.py <plot_crossviews_plot.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_crossviews_plot.ipynb <plot_crossviews_plot.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
