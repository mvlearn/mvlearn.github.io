.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_embed_plot_gcca_tutorial.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_embed_plot_gcca_tutorial.py:


==========================================================
Generalized Canonical Correlation Analysis (GCCA) Tutorial
==========================================================

In this tutorial we demonstrate the use of GCCA to uncover latent correlated
information across views when we have more than 2 views. In this case, we
use 3 views from the UCI Multiple Features Dataset.


.. code-block:: default


    # License: MIT

    from mvlearn.datasets import load_UCImultifeature
    from mvlearn.embed import GCCA
    from mvlearn.plotting import crossviews_plot








Load Data
---------

We load three views from the UCI handwritten digits multi-view data set.
Specificallym the Profile correlations, Karhunen-Love coefficients, and pixel
averages from 2x3 windows.


.. code-block:: default



    # Load the data
    Xs, y = load_UCImultifeature(views=[1, 2, 3])

    # Inspect the dataset
    print(f'There are {len(Xs)} views.')
    print(f'There are {Xs[0].shape[0]} observations')
    print(f'The feature sizes are: {[X.shape[1] for X in Xs]}')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    There are 3 views.
    There are 2000 observations
    The feature sizes are: [216, 64, 240]




Embed Views
^^^^^^^^^^^


.. code-block:: default



    # Create GCCA object and embed the
    gcca = GCCA()
    Xs_latents = gcca.fit_transform(Xs)

    print(f'The feature sizes are: {[X.shape[1] for X in Xs_latents]}')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    The feature sizes are: [5, 5, 5]




Plot the first two views against each other
-------------------------------------------
The top three dimensions from the latents spaces of the profile correlation
and pixel average views are plotted against each other. However, their latent
spaces are influenced the the Karhunen-Love coefficients, not plotted.


.. code-block:: default



    crossviews_plot(Xs_latents[[0, 2]], dimensions=[0, 1, 2], labels=y,
                    cmap='Set1', title='Profile correlations vs Pixel Averages',
                    scatter_kwargs={'alpha': 0.4, 's': 2.0})



.. image:: /auto_examples/embed/images/sphx_glr_plot_gcca_tutorial_001.png
    :alt: Profile correlations vs Pixel Averages
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.809 seconds)


.. _sphx_glr_download_auto_examples_embed_plot_gcca_tutorial.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_gcca_tutorial.py <plot_gcca_tutorial.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_gcca_tutorial.ipynb <plot_gcca_tutorial.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
