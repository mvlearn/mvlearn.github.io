
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/datasets/plot_gaussianmixtures.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_datasets_plot_gaussianmixtures.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_datasets_plot_gaussianmixtures.py:


================================================
Generating Multiview Data from Gaussian Mixtures
================================================

In this example we show how to simulate multiview data from Gaussian
mixtures and plot the views against each other using a crossviews plot.

.. GENERATED FROM PYTHON SOURCE LINES 10-44



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/datasets/images/sphx_glr_plot_gaussianmixtures_001.png
          :alt: Latent Variable
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/datasets/images/sphx_glr_plot_gaussianmixtures_002.png
          :alt: View 1 vs. View 2 (Polynomial Transform + noise)
          :class: sphx-glr-multi-img





.. code-block:: default


    # License: MIT

    import numpy as np
    from mvlearn.datasets import make_gaussian_mixture
    from mvlearn.plotting import crossviews_plot

    # Latent variables are sampled from two multivariate Gaussians with equal
    # prior probability. Then a polynomial transformation is applied and noise
    # is added independently to both the transformed and untransformed latents.

    n_samples = 100
    centers = [[0, 1], [0, -1]]
    covariances = [np.eye(2), np.eye(2)]
    Xs, y, latent = make_gaussian_mixture(
        n_samples, centers, covariances, random_state=42, noise_dims=2,
        shuffle=True, shuffle_random_state=42, transform='poly',
        return_latents=True)


    # The latent data is plotted against itself to reveal the underlying
    # distribtution.


    crossviews_plot([latent, latent], labels=y, title='Latent Variable',
                    equal_axes=True)

    # The noisy latent variable (view 1) is plotted against the transformed latent
    # variable (view 2), an example of a dataset with two views.


    crossviews_plot(Xs, labels=y,
                    title='View 1 vs. View 2 (Polynomial Transform + noise)',
                    equal_axes=True)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.125 seconds)


.. _sphx_glr_download_auto_examples_datasets_plot_gaussianmixtures.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_gaussianmixtures.py <plot_gaussianmixtures.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_gaussianmixtures.ipynb <plot_gaussianmixtures.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
